rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Temporary rule for testing - REMOVE IN PRODUCTION
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
    match /users/{userId} {
      // Allow users to read and write only their own documents
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;

      // Allow any authenticated user to read basic user information
      // This is needed for chat functionality to work
      allow read: if request.auth != null;
    }

    // Students collection rules
    match /students/{studentId} {
      // Allow authenticated users to read student profiles
      allow read: if request.auth != null;

      // Allow students to update their own profiles
      allow write: if request.auth != null && request.auth.uid == studentId;
    }

    // Mentors collection rules
    match /mentors/{mentorId} {
      // Allow authenticated users to read mentor profiles
      allow read: if request.auth != null;

      // Allow mentors to update their own profiles
      allow write: if request.auth != null && request.auth.uid == mentorId;
    }

    // Messages collection rules
    match /messages/{messageId} {
      // Messages can only be read by the participants
      allow read: if request.auth != null &&
        (
          // For document gets, check if user is a participant
          (resource != null && (request.auth.uid == resource.data.studentId || request.auth.uid == resource.data.mentorId))
          ||
          // For queries, allow listing all messages (filtering happens in the query)
          (resource == null)
        );

      // Anyone can create a message, but they must set their ID correctly
      allow create: if request.auth != null &&
        (request.auth.uid == request.resource.data.studentId ||
         request.auth.uid == request.resource.data.mentorId);

      // Allow updating only for marking messages as read
      allow update: if request.auth != null &&
        (request.auth.uid == resource.data.studentId ||
         request.auth.uid == resource.data.mentorId) &&
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['read']);
    }

    // Conversations collection rules
    match /conversations/{conversationId} {
      // Allow users to read conversations where they are a participant
      allow read: if request.auth != null &&
        (
          // For document gets, check if user is a participant
          (resource != null && (request.auth.uid == resource.data.studentId || request.auth.uid == resource.data.mentorId))
          ||
          // For queries, allow listing all conversations (filtering happens in the query)
          (resource == null)
        );

      allow create: if request.auth != null &&
        (request.auth.uid == request.resource.data.studentId ||
         request.auth.uid == request.resource.data.mentorId);

      allow update: if request.auth != null &&
        (request.auth.uid == resource.data.studentId ||
         request.auth.uid == resource.data.mentorId);
    }
  }
}